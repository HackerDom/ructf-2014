<!DOCTYPE html>
<head>
<title>RuCTF 2014 flight map</title>
<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
<link href="https://developers.google.com/maps/documentation/javascript/examples/default.css" rel="stylesheet">
<style type="text/css">
  html { height: 100% }
  body { height: 100%; margin: 0; padding: 0 }
  #map_canvas { height: 100% }
</style>
<script type="text/javascript"  src="http://maps.googleapis.com/maps/api/js?sensor=false">
</script>
<script src="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerwithlabel/src/markerwithlabel.js" type="text/javascript"></script>

<script type="text/javascript">
	var map = null;
	var mapOptions = null;

	var markers = null; //should be array of planes
	var flightPaths = null; //should be array of plane paths

	var teams = []; /* [
		{
			name: "Leet More",
			coords: [87, 5, 12, -35, -71, -52, -61, 75, -19, -31, -27, 20, -55, -89, -68, 8, -56, -21, 64, -81, -81, -30, -90, 81, -47, -16, 71, -40, 41, -82, 74, -36, -62, -73, -39, 74, -6, 24, -50, -68, 70, -65, -36, 46, 74, -46, 77, 56, 38, -70],
			type: 0
		},
		{
			name: "SiBears",
			coords: [-75, -29, 42, 57, -69, -69, 9, -44, -46, -11, 74, 5, 54, -27, 65, 6, -80, -28, 52, 15, -69, -62, 17, -29, -35, -75, 76, -13, -26, -5, 60, 33, -88, 77, 34, -69, 63, -46, 14, -34, -63, 17, -82, 2, 6, -65, 58, -76, -76, -52],
			type: 1
		}
	]*/

	var progress = 0.0;
//	var teams_count = teams.length;

	function fetch_timeout()
	{
		xmlhttp=new XMLHttpRequest();
		xmlhttp.open("GET","<%= url_for('fly_data') %>",false);
		xmlhttp.send();
		var data = JSON.parse(xmlhttp.responseText);
		teams = data.teams;
		for (ii=0;ii<teams.length;ii++)
		{
			for(jj=0;jj<teams[ii].coords.length;jj++)
			{
				teams[ii].coords[jj] = parseFloat(teams[ii].coords[jj]);
			}
		}
		progress = data.progress;
		console.log(data);
	}

	function redraw_planes()
	{
		for (j=0;j<teams.length;j++)
		{
			draw_plane(j, progress);
		}
		progress += 0.001;
		if (progress > 1)
		{
			progress = 1.0;
		}
	}

	function calculateBearing(from, to)
	{
		lon2 = to.lng() * Math.PI / 180.0;
		lon1 = from.lng() * Math.PI / 180.0;
		lat2 = to.lat() * Math.PI / 180.0;
		lat1 = from.lat() * Math.PI / 180.0;
		dLon = lon2 - lon1;
		var y = Math.sin(dLon) * Math.cos(lat2);
		var x = Math.cos(lat1)*Math.sin(lat2) - Math.sin(lat1)*Math.cos(lat2)*Math.cos(dLon);
		var brng = Math.round(Math.atan2(y, x) * 12 / Math.PI);
		while (brng < 0)
		{
			brng += 24;
		}
		while (brng > 24)
		{
			brng -= 24;
		}
		return brng;
	}

	function draw_plane(n, progress)
	{
		//console.log(teams);
		totalLen = 0.0;
		for (i=2;i<teams[n].coords.length;i += 2)
		{
			totalLen += Math.sqrt((teams[n].coords[i] - teams[n].coords[i-2]) * (teams[n].coords[i] - teams[n].coords[i-2]) + (teams[n].coords[i+1] - teams[n].coords[i-1])*(teams[n].coords[i+1] - teams[n].coords[i-1]));
		}
		passed = totalLen * progress;
		totalLen = 0.0;
		temp_line = Array();
		temp_line.push(new google.maps.LatLng(teams[n].coords[0], teams[n].coords[1]));
		for (i=2;i<teams[n].coords.length;i += 2)
		{
			difference = Math.sqrt((teams[n].coords[i] - teams[n].coords[i-2]) * (teams[n].coords[i] - teams[n].coords[i-2]) + (teams[n].coords[i+1] - teams[n].coords[i-1])*(teams[n].coords[i+1] - teams[n].coords[i-1]));
			if (totalLen + difference >= passed)
			{
				k = (passed - totalLen) / difference;
				final_x = teams[n].coords[i-2] + (teams[n].coords[i] - teams[n].coords[i-2]) * k;
				final_y = teams[n].coords[i-1] + (teams[n].coords[i+1] - teams[n].coords[i-1]) * k;
				temp_line.push(new google.maps.LatLng(final_x, final_y));
				break;
			}
			final_x = teams[n].coords[i];
			final_y = teams[n].coords[i+1];
			temp_line.push(new google.maps.LatLng(final_x, final_y));
			totalLen += difference;
		}
	//	console.log('Hi', n);
		//console.log(n, flightPaths);
		path = flightPaths[n].getPath();
		while (path.length)
		{
			path.pop();
		}
		for (i = 0; i < temp_line.length; i++)
		{
			path.push(temp_line[i]);
		}
		bearing = calculateBearing(temp_line[temp_line.length - 2], temp_line[temp_line.length - 1]);
		markers[n].setPosition(new google.maps.LatLng(final_x,final_y)); //lat, lon
		name = ["A320.png", "B752.png", "A333.png", "B748.png"][teams[n].type];
		icon = new google.maps.MarkerImage("/" + name, new google.maps.Size(50, 50, "px", "px"), new google.maps.Point(bearing * 50, 0), new google.maps.Point(25, 25), null);
		markers[n].setIcon(icon);
	//	markers[n].setLabelContent(teams[n].name);
	}

	function initialize()
	{
		fetch_timeout();
		myLatlng = new google.maps.LatLng(0.0, 0.0);
		mapOptions = {
			center: myLatlng,
			zoom: 2,
			maxZoom: 10,
			streetViewControl: false,
			mapTypeId: google.maps.MapTypeId.SATELLITE
		};
		map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
		markers = Array();
		flightPaths = Array();
		for (i=0;i<teams.length;i++)
		{
			markers.push(new MarkerWithLabel({
				position: myLatlng,
				map: map,
				icon: '/plane.png',
				labelContent: teams[i].name,
				labelAnchor: new google.maps.Point(-30, 60),
				labelStyle: { color: 'white', 'font-size': '20pt'}
			}));
			flightPaths.push(new google.maps.Polyline({
				path: [],
				geodesic: false,
				strokeColor: '#FFFFFF',
				strokeOpacity: 1.0,
	    		strokeWeight: 2
	  		}));
	  		flightPaths[i].setMap(map);
		}
		window.setInterval("redraw_planes()",500);
		//TODO: setInterval for planes fetching
	}
</script>
</head>
<body onload="initialize(); ">
<div id="map_canvas"></div>
</body>
</html>
