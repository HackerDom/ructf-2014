% layout 'default';
% title 'RuCTF > скорборд';
% use Mojo::Util 'url_escape';

<p id="round">Round <%= $self->app->round->{n} %> (started at <%= $self->app->round->{time} %>)</p>
<div id="history"></div>
<table class="table table-bordered">
  <tr>
    <td>#</td>
    <td>Логотип</td>
    <td>Команда</td>
    <td>Очки</td>
    % for my $service (values %{$self->app->services}) {
    <td><%= $service %></td>
    % }
    <td>Флаги</td>
  </tr>
  % my $pos = 0;
  % for my $score (@{$self->app->scoreboard}) {
  <tr>
    <td><%= ++$pos %>.</td>
    <td>
      % my $name = url_escape url_escape $score->{team}{name};
      % warn $name;
      <img src="<%= url_for('/logo/' . $name) %>" width="64" height="64">
    </td>
    <td><%= $score->{team}{name} %> (<%= $score->{team}{vuln_box} %>)</td>
    <td><%= sprintf '%.2f', $score->{score} %></td>

    % for my $sid (keys %{$self->app->services}) {
      % my $status = $self->app->status->{$sid}{$score->{team}{id}}{status};
      % my $s = {101 => 'success', 102 => 'info', 103 => 'warning', 104 => 'danger', 110 => 'active'};
      <td class="s<%= $status %>" data-team="<%= $score->{team}{id} %>" data-service="<%= $sid %>" data-score="<%= $score->{sla}{$sid} * $score->{fp}{$sid} %>">
        S: <%= $status %> <br/>
        SLA: <%= sprintf '%.2f', $score->{sla}{$sid} %> <br/>
        FP: <%= sprintf '%.2f', $score->{fp}{$sid} %>
      </td>
    % }
    <td>
      <div style="width: 100px; height: 100px;" id="team_<%= $score->{team}{id} %>"></div>
    </td>
  </tr>
  % }
</table>

<script>
function rgbToHsv(r, g, b) {
  r /= 255, g /= 255, b /= 255;

  var max = Math.max(r, g, b), min = Math.min(r, g, b);
  var h, s, v = max;

  var d = max - min;
  s = max == 0 ? 0 : d / max;

  if (max == min) {
    h = 0; // achromatic
  } else {
    switch (max) {
      case r: h = (g - b) / d + (g < b ? 6 : 0); break;
      case g: h = (b - r) / d + 2; break;
      case b: h = (r - g) / d + 4; break;
    }
    h /= 6;
  }
  return [ h, s, v ];
}

function hsvToRgb(h, s, v) {
  var r, g, b;

  var i = Math.floor(h * 6);
  var f = h * 6 - i;
  var p = v * (1 - s);
  var q = v * (1 - f * s);
  var t = v * (1 - (1 - f) * s);

  switch (i % 6) {
    case 0: r = v, g = t, b = p; break;
    case 1: r = q, g = v, b = p; break;
    case 2: r = p, g = v, b = t; break;
    case 3: r = p, g = q, b = v; break;
    case 4: r = t, g = p, b = v; break;
    case 5: r = v, g = p, b = q; break;
  }

  return [ r * 255, g * 255, b * 255 ];
}
</script>

<script>
$(document).ready(function() {

  var colors = {
    s101: [0, 220, 0],
    s102: [255, 255, 0],
    s103: [255, 166, 0],
    s104: [230, 0, 0],
    s110: [128, 128, 128]
  };

  for (s in [1,2,3,4,5,6,7]) {
    var ss = parseInt(s) + 1;
    console.log(ss);
    var scores = [];
    $('td[data-service="' + ss + '"]').each(function (idx, el) {
      scores.push(parseFloat($(el).attr('data-score')));
    });
    m = Math.max.apply(null, scores);
    $('td[data-service=' + ss + ']').each(function (idx, el) {
      var score = parseFloat($(el).attr('data-score'));
      var x = m == 0 ? 1 : score / m;
      var color = colors[$(el).attr('class')];
      var hsv = rgbToHsv(color[0], color[1], color[2]);
      var y = 0.3 + hsv[1] * x * 0.7;
      var ncolor = hsvToRgb(hsv[0], y, hsv[2]);
      var z = 'rgb(' + parseInt(ncolor[0]) + ',' + parseInt(ncolor[1]) + ',' + parseInt(ncolor[2]) + ')';
      $(el).css('background-color', z);
    });
  }

  $.get("<%= url_for('flags') %>", function(flags) {
    $.each(flags, function(team, data) {
      c = '#team_' + team;
      s = [];
      $.each(data, function(service, count) {
        s.push([service, parseInt(count)]);
      });
      $(c).highcharts({
        chart: {
          margin: [0, 0, 0, 0],
          spacingTop: 0,
          spacingBottom: 0,
          spacingLeft: 0,
          spacingRight: 0
        },
        title: { text: '' },
        tooltip: {
          enabled: false
       },
       plotOptions: {
         pie: {
           animation: false,
           size:'100%',
           dataLabels: {
             enabled: false
           }
         }
       },
       series: [{
         type: 'pie',
         name: team,
         data: s
       }],
       credits: {
        enabled: false
      }
      });
    });
  });
  $.get("<%= url_for('history') %>", function(history) {
    console.log(history);
    $('#history').highcharts({
      chart: {
        zoomType: 'x'
      },
      title: { text: '' },
      xAxis: {
        title: { text: 'Раунды' },
      },
      yAxis: {
        title: { text: 'Очки' },
        min: 0
      },
      tooltip: {},
      plotOptions: {
        line: {
          animation: false,
          marker: {
            enabled: false
          }
        },
        series: {
          turboThreshold: 5000
        }
      },
      legend: {
        layout: 'vertical',
        align: 'right',
        verticalAlign: 'middle',
        borderWidth: 0
      },
      series: history,
      credits: {
        enabled: false
      }
    });
  });
});
</script>
