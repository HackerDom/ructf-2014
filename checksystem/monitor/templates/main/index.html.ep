% layout 'default';
% title 'RuCTF > скорборд';

% use Mojo::Util 'url_escape';

% content_for r => begin
  Раунд <%= $self->app->round->{n} %>
% end
<!-- <h2>RuCTF 2014</h2> -->

<div class="legend-item"><span  id="s101" style="background-color: rgb(0, 220, 0);" class="color-box">&nbsp;</span><span>&nbsp;UP</span></div>

<div class="legend-item"><span id="s102" style="background-color: rgb(255, 255, 0);" class="color-box">&nbsp;</span><span>&nbsp;CORRUPT</span></div>

<div class="legend-item"><span id="s103" style="background-color: rgb(255, 166, 0);" class="color-box">&nbsp;</span><span>&nbsp;MUMBLE</span></div>

<div class="legend-item"><span id="s104" style="background-color: rgb(230, 0, 0);" class="color-box">&nbsp;</span><span>&nbsp;DOWN</span></div>

<div class="legend-item"><span id="s105" style="background-color: rgb(69, 35, 0);" class="color-box">&nbsp;</span><span>&nbsp;CHECKER ERROR</span></div>


<table class="table table-bordered">
  <tr>
    <td><b>Место</b></td>
    <td><b>Логотип</b></td>
    <td><b>Команда</b></td>
    <td><b>Очки</b></td>
    % my @scolors = ('rgb(179,0,179)', 'rgb(205,16,118)', 'rgb(179,179,0)', 'rgb(46,179,87)', 'rgb(0,238,238)', 'rgb(112,128,144)', 'rgb(0,0,240)');
    % for my $sid (keys %{$self->app->services}) {
      <td
        class="service"
        data-sid="<%= $sid %>"
        style="background-color: <%= shift @scolors %>;"
      >
          <b><%= $self->app->services->{$sid} %></b>
      </td>
    % }
    <td><b>Флаги</b></td>
  </tr>
  % my $pos = 0;
  % for my $score (@{$self->app->scoreboard}) {
  <tr>
    <td class="team-pos"><%= ++$pos %></td>
    <td>
      % my $name = url_escape url_escape $score->{team}{name};
      <img src="<%= url_for('/logo/' . $name) %>" width="64" height="64" class="img-rounded">
    </td>
    <td class="team-name"><span title="<%= $score->{team}{vuln_box} %>"><%= $score->{team}{name} %></span></td>
    <td class="team-score"><%= sprintf '%.2f', $score->{score} %></td>

    % for my $sid (keys %{$self->app->services}) {
      % my $status = $self->app->status->{$sid}{$score->{team}{id}}{status};
      % my $comment = $self->app->status->{$sid}{$score->{team}{id}}{fail_comment};
      % my $s = {101 => 'OK', 102 => 'CORRUPT', 103 => 'MUMBLE', 104 => 'DOWN', 110 => 'CHECKER ERROR'};
      <td
        title="<%= $s->{$status} %>. <%= $comment %>"
        class="s<%= $status %> service-status"
        data-status="s<%= $status %>"
        data-team="<%= $score->{team}{id} %>"
        data-service="<%= $sid %>"
        data-score="<%= $score->{sla}{$sid} * $score->{fp}{$sid} %>"
      >
        <div>SLA: <%= sprintf '%d', 100 * $score->{sla}{$sid} %>%</div>
        <div>FP: <%= sprintf '%.2f', $score->{fp}{$sid} %></div>
      </td>
    % }
    <td>
      <div style="width: 70px; height: 70px;" id="team_<%= $score->{team}{id} %>"></div>
    </td>
  </tr>
  % }
</table>

<hr/>
<div id="history" style="height: 280px;"></div>

<script>
function rgbToHsv(r, g, b) {
  r /= 255, g /= 255, b /= 255;

  var max = Math.max(r, g, b), min = Math.min(r, g, b);
  var h, s, v = max;

  var d = max - min;
  s = max == 0 ? 0 : d / max;

  if (max == min) {
    h = 0; // achromatic
  } else {
    switch (max) {
      case r: h = (g - b) / d + (g < b ? 6 : 0); break;
      case g: h = (b - r) / d + 2; break;
      case b: h = (r - g) / d + 4; break;
    }
    h /= 6;
  }
  return [ h, s, v ];
}

function hsvToRgb(h, s, v) {
  var r, g, b;

  var i = Math.floor(h * 6);
  var f = h * 6 - i;
  var p = v * (1 - s);
  var q = v * (1 - f * s);
  var t = v * (1 - (1 - f) * s);

  switch (i % 6) {
    case 0: r = v, g = t, b = p; break;
    case 1: r = q, g = v, b = p; break;
    case 2: r = p, g = v, b = t; break;
    case 3: r = p, g = q, b = v; break;
    case 4: r = t, g = p, b = v; break;
    case 5: r = v, g = p, b = q; break;
  }

  return [ r * 255, g * 255, b * 255 ];
}
</script>

<script>
$(document).ready(function() {

  var colors = {
    s101: [0, 220, 0],
    s102: [255, 255, 0],
    s103: [255, 166, 0],
    s104: [230, 0, 0],
    s110: [69, 35, 0]
  };

  for (s in [1,2,3,4,5,6,7]) {
    var ss = parseInt(s) + 1;
    var scores = [];
    $('td[data-service="' + ss + '"]').each(function (idx, el) {
      scores.push(parseFloat($(el).attr('data-score')));
    });
    m = Math.max.apply(null, scores);
    $('td[data-service="' + ss + '"]').each(function (idx, el) {
      var score = parseFloat($(el).attr('data-score'));
      var x = m == 0 ? 1 : score / m;
      var color = colors[$(el).attr('data-status')];
      if (!color) {
        color = colors['s110'];
      }
      var hsv = rgbToHsv(color[0], color[1], color[2]);
      var ncolor = hsvToRgb(hsv[0], 0.5 + hsv[1] * x * 0.5, hsv[2]);
      var z = 'rgb(' + parseInt(ncolor[0]) + ',' + parseInt(ncolor[1]) + ',' + parseInt(ncolor[2]) + ')';
      $(el).css('background-color', z);
    });
  }

  $.get("<%= url_for('flags') %>", function(flags) {
    $.each(flags, function(team, data) {
      c = '#team_' + team;
      s = [];
      $.each(data, function(sid, d) {
        s.push({
          x: sid,
          y: parseInt(d.count),
          name: d.name,
          color: $('td[data-sid="' + sid + '"]').css('background-color')
        });
      });
      $(c).highcharts({
        chart: {
          margin: [0, 0, 0, 0],
          spacingTop: 0,
          spacingBottom: 0,
          spacingLeft: 0,
          spacingRight: 0
        },
        title: { text: '' },
        tooltip: {
          enabled: true
       },
       plotOptions: {
         pie: {
           animation: false,
           size:'100%',
           borderWidth: 0,
           dataLabels: {
             enabled: false
           }
         }
       },
       series: [{
         type: 'pie',
         name: team,
         data: s
       }],
       credits: {
        enabled: false
      }
      });
    });
  });
  $.get("<%= url_for('history') %>", function(history) {
    $('#history').highcharts({
      chart: {
        zoomType: 'x'
      },
      title: { text: '' },
      xAxis: {
        title: { text: '' },
      },
      yAxis: {
        title: { text: '' },
        min: 0
      },
      tooltip: {},
      plotOptions: {
        line: {
          animation: false,
          marker: {
            enabled: false
          }
        },
        series: {
          turboThreshold: 0
        }
      },
      legend: {
        layout: 'vertical',
        align: 'right',
        verticalAlign: 'middle',
        borderWidth: 0
      },
      series: history,
      credits: {
        enabled: false
      }
    });
  });
});
</script>
